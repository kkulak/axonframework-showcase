import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
import com.bmuschko.gradle.docker.tasks.image.DockerTagImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

apply plugin: 'spring-boot'
apply plugin: 'com.bmuschko.docker-java-application'
mainClassName = 'knbit.events.bc.announcement.Application'

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven { url "http://repo.spring.io/milestone" }
        maven { url 'https://oss.sonatype.org/content/repositories/releases/' }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.2.RELEASE")
        classpath 'com.bmuschko:gradle-docker-plugin:2.4'

    }
}

dependencies {
    // knbit-events-bc
    compile project(':events-bc-core')

    // spring
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-mail:1.2.3.RELEASE'
    compile('org.springframework.boot:spring-boot-starter-data-jpa:1.2.6.RELEASE') {
        exclude group: 'org.springframework.data', module: 'spring-data-jpa'
    }
    compile 'org.springframework.data:spring-data-jpa:1.9.0.RELEASE'
    compile 'hsqldb:hsqldb:1.8.0.10'
    compile 'org.postgresql:postgresql:9.4-1203-jdbc42'

    // publishers
    compile 'org.twitter4j:twitter4j-core:4.0.3'
    compile 'org.facebook4j:facebook4j-core:2.2.2'
    compile 'net.sourceforge.htmlunit:htmlunit:2.18'

    compile 'commons-validator:commons-validator:1.4.0'
    compile 'org.apache.commons:commons-imaging:1.0-SNAPSHOT'

    // spring-test
    testCompile 'org.springframework:spring-test:4.1.1.RELEASE'
    testCompile 'com.jayway.jsonpath:json-path:0.9.1'

    // swagger
    compile "org.ajar:swagger-spring-mvc-ui:0.4"
    compile 'com.mangofactory:swagger-springmvc:1.0.2'
    runtime 'org.apache.tomcat.embed:tomcat-embed-jasper'
}

docker {
    registryCredentials {
        username = dockerRegistryProperties.username
        password = dockerRegistryProperties.password
        email = dockerRegistryProperties.email
    }
}
task createDockerfile(type: Dockerfile) {
    dependsOn build
    destFile = project.file('build/Dockerfile')
    from 'java:8'
    volume '/tmp'

    runCommand 'openssl s_client -showcerts -connect accounts.iiet.pl:443 </dev/null 2>/dev/null|openssl x509 -outform PEM > accounts.pem'
    runCommand 'openssl s_client -showcerts -connect forum.iiet.pl:443 -servername forum.iiet.pl </dev/null 2>/dev/null|openssl x509 -outform PEM > forum.pem'
    runCommand 'keytool -import -alias \'accounts.iiet.pl\' -file accounts.pem -keystore /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/cacerts -storepass changeit -noprompt'
    runCommand 'keytool -import -alias \'forum.iiet.pl\' -file forum.pem -keystore /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/cacerts -storepass changeit -noprompt'

    addFile 'libs/events-bc-announcement-*.jar', 'announcement-bc.jar'
    runCommand 'bash -c "touch /announcement-bc.jar"'

    entryPoint '/bin/sh', '-c', 'java -Xmx$HEAP_SIZE -jar /announcement-bc.jar'
}

task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    inputDir = createDockerfile.destFile.parentFile
    tag = 'knbitevents/announcement-bc:latest'
}

task tagImage(type: DockerTagImage) {
    dependsOn buildImage
    repository = 'knbitevents/announcement-bc'
    imageId = 'knbitevents/announcement-bc'
    tag = version + '-' + LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd_hh.mm.ss"))
}

task pushImage(type: DockerPushImage) {
    dependsOn tagImage
    imageName = 'knbitevents/announcement-bc'
}

task runApp() {
    dependsOn bootRun
}

springBoot {
    requiresUnpack = ['org.ajar:swagger-spring-mvc-ui']
}

bootRun {
    systemProperties = System.properties
}
